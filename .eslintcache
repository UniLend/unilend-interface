[{"/home/oem/unilend-interface/src/index.tsx":"1","/home/oem/unilend-interface/src/reportWebVitals.ts":"2","/home/oem/unilend-interface/src/App.tsx":"3","/home/oem/unilend-interface/src/state/index.tsx":"4","/home/oem/unilend-interface/src/hooks/useActions.tsx":"5","/home/oem/unilend-interface/src/hooks/useTypedSelector.tsx":"6","/home/oem/unilend-interface/src/components/Layout/Layout.tsx":"7","/home/oem/unilend-interface/src/components/View/Migrate/Migrate.tsx":"8","/home/oem/unilend-interface/src/components/View/Info/Info.tsx":"9","/home/oem/unilend-interface/src/components/View/Mining/Mining.tsx":"10","/home/oem/unilend-interface/src/components/View/UI/LoadingPage/LoadingPage.tsx":"11","/home/oem/unilend-interface/src/components/View/Borrow/Borrow.tsx":"12","/home/oem/unilend-interface/src/components/View/Redeem/Redeem.tsx":"13","/home/oem/unilend-interface/src/components/View/Repay/Repay.tsx":"14","/home/oem/unilend-interface/src/components/View/Lend/Lend.tsx":"15","/home/oem/unilend-interface/src/state/store.tsx":"16","/home/oem/unilend-interface/src/components/View/Swap/Swap.tsx":"17","/home/oem/unilend-interface/src/components/View/UI/ContentCard/ContentCard.tsx":"18","/home/oem/unilend-interface/src/components/View/UI/Navbar/NavBar.tsx":"19","/home/oem/unilend-interface/src/components/View/UI/FieldsCard/FieldCard.tsx":"20","/home/oem/unilend-interface/src/components/View/UI/CurrencySelectModel/CurrencySelectModel.tsx":"21","/home/oem/unilend-interface/src/components/View/UI/TransactionLoaderPopup/TransactionLoader.tsx":"22","/home/oem/unilend-interface/src/state/action-creators/index.tsx":"23","/home/oem/unilend-interface/src/state/reducers/index.tsx":"24","/home/oem/unilend-interface/src/hooks/useWalletConnect.tsx":"25","/home/oem/unilend-interface/src/ethereum/web3.tsx":"26","/home/oem/unilend-interface/src/ethereum/contracts/UnilendLB.tsx":"27","/home/oem/unilend-interface/src/state/action-creators/settingsAction.tsx":"28","/home/oem/unilend-interface/src/state/action-creators/repayAction.tsx":"29","/home/oem/unilend-interface/src/state/action-creators/redeemAction.tsx":"30","/home/oem/unilend-interface/src/state/action-creators/connectWalletAction.tsx":"31","/home/oem/unilend-interface/src/state/action-creators/borrowAction.tsx":"32","/home/oem/unilend-interface/src/state/reducers/borrowReducer.tsx":"33","/home/oem/unilend-interface/src/state/reducers/configureWalletReducer.tsx":"34","/home/oem/unilend-interface/src/state/reducers/repayReducer.tsx":"35","/home/oem/unilend-interface/src/state/reducers/redeemReducer.tsx":"36","/home/oem/unilend-interface/src/state/action-creators/lendAction.tsx":"37","/home/oem/unilend-interface/src/state/reducers/settingsReducer.tsx":"38","/home/oem/unilend-interface/src/state/reducers/lendReducer.tsx":"39","/home/oem/unilend-interface/src/ethereum/contracts/index.tsx":"40","/home/oem/unilend-interface/src/utils/index.tsx":"41","/home/oem/unilend-interface/src/ethereum/web3Service.tsx":"42","/home/oem/unilend-interface/src/state/action-types/index.tsx":"43"},{"size":869,"mtime":1620904096107,"results":"44","hashOfConfig":"45"},{"size":425,"mtime":1620904096107,"results":"46","hashOfConfig":"45"},{"size":2675,"mtime":1620904096091,"results":"47","hashOfConfig":"45"},{"size":106,"mtime":1620904096107,"results":"48","hashOfConfig":"45"},{"size":258,"mtime":1620904096107,"results":"49","hashOfConfig":"45"},{"size":182,"mtime":1620904096107,"results":"50","hashOfConfig":"45"},{"size":299,"mtime":1620904096103,"results":"51","hashOfConfig":"45"},{"size":330,"mtime":1620904096103,"results":"52","hashOfConfig":"45"},{"size":318,"mtime":1620904096103,"results":"53","hashOfConfig":"45"},{"size":870,"mtime":1620904096103,"results":"54","hashOfConfig":"45"},{"size":614,"mtime":1620904096107,"results":"55","hashOfConfig":"45"},{"size":6505,"mtime":1621152238248,"results":"56","hashOfConfig":"45"},{"size":5238,"mtime":1621152238248,"results":"57","hashOfConfig":"45"},{"size":5298,"mtime":1620904096103,"results":"58","hashOfConfig":"45"},{"size":4019,"mtime":1621152238244,"results":"59","hashOfConfig":"45"},{"size":324,"mtime":1620904096107,"results":"60","hashOfConfig":"45"},{"size":3365,"mtime":1620904096107,"results":"61","hashOfConfig":"45"},{"size":614,"mtime":1620904096107,"results":"62","hashOfConfig":"45"},{"size":6293,"mtime":1621081797728,"results":"63","hashOfConfig":"45"},{"size":1880,"mtime":1620904096107,"results":"64","hashOfConfig":"45"},{"size":3319,"mtime":1620904096107,"results":"65","hashOfConfig":"45"},{"size":6583,"mtime":1621081797728,"results":"66","hashOfConfig":"45"},{"size":198,"mtime":1620904096107,"results":"67","hashOfConfig":"45"},{"size":613,"mtime":1621087500190,"results":"68","hashOfConfig":"45"},{"size":597,"mtime":1620904096107,"results":"69","hashOfConfig":"45"},{"size":483,"mtime":1620904096107,"results":"70","hashOfConfig":"45"},{"size":767,"mtime":1620904096107,"results":"71","hashOfConfig":"45"},{"size":687,"mtime":1620904096107,"results":"72","hashOfConfig":"45"},{"size":1011,"mtime":1620904096107,"results":"73","hashOfConfig":"45"},{"size":2827,"mtime":1621150863304,"results":"74","hashOfConfig":"45"},{"size":3165,"mtime":1620904096107,"results":"75","hashOfConfig":"45"},{"size":6444,"mtime":1621152238248,"results":"76","hashOfConfig":"45"},{"size":1998,"mtime":1621152238248,"results":"77","hashOfConfig":"45"},{"size":1604,"mtime":1620904096107,"results":"78","hashOfConfig":"45"},{"size":457,"mtime":1620904096107,"results":"79","hashOfConfig":"45"},{"size":1592,"mtime":1621152238248,"results":"80","hashOfConfig":"45"},{"size":1262,"mtime":1621152238248,"results":"81","hashOfConfig":"45"},{"size":518,"mtime":1620904096107,"results":"82","hashOfConfig":"45"},{"size":1161,"mtime":1621152238248,"results":"83","hashOfConfig":"45"},{"size":591,"mtime":1621001032273,"results":"84","hashOfConfig":"45"},{"size":518,"mtime":1620904096107,"results":"85","hashOfConfig":"45"},{"size":301,"mtime":1620904096107,"results":"86","hashOfConfig":"45"},{"size":1256,"mtime":1621152238248,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"o90a88",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/home/oem/unilend-interface/src/index.tsx",[],["180","181"],"/home/oem/unilend-interface/src/reportWebVitals.ts",[],"/home/oem/unilend-interface/src/App.tsx",[],"/home/oem/unilend-interface/src/state/index.tsx",[],"/home/oem/unilend-interface/src/hooks/useActions.tsx",[],"/home/oem/unilend-interface/src/hooks/useTypedSelector.tsx",[],"/home/oem/unilend-interface/src/components/Layout/Layout.tsx",[],"/home/oem/unilend-interface/src/components/View/Migrate/Migrate.tsx",[],"/home/oem/unilend-interface/src/components/View/Info/Info.tsx",[],"/home/oem/unilend-interface/src/components/View/Mining/Mining.tsx",[],"/home/oem/unilend-interface/src/components/View/UI/LoadingPage/LoadingPage.tsx",[],"/home/oem/unilend-interface/src/components/View/Borrow/Borrow.tsx",["182","183"],"import React, { FC, useCallback, useEffect, useState } from \"react\";\nimport ContentCard from \"../UI/ContentCard/ContentCard\";\nimport FieldCard from \"../UI/FieldsCard/FieldCard\";\nimport CurrencySelectModel from \"../UI/CurrencySelectModel/CurrencySelectModel\";\nimport web3 from \"ethereum/web3\";\nimport { UnilendLBContract } from \"ethereum/contracts/UnilendLB\";\nimport { assetAddress, collateralAddress } from \"ethereum/contracts\";\nimport { useActions } from \"hooks/useActions\";\nimport { useTypedSelector } from \"hooks/useTypedSelector\";\nimport useWalletConnect from \"hooks/useWalletConnect\";\nimport TransactionPopup from \"../UI/TransactionLoaderPopup/TransactionLoader\";\n\ninterface Props {}\n\nconst Borrow: FC<Props> = (props) => {\n  const [yourCollateral, setYourCollateral] = useState(\"\");\n  const [borrowReceived, setBorrowReceived] = useState(\"\");\n  const [showModel, setShowModel] = useState(false);\n  const [currFieldName, setCurrFieldName] = useState(\"\");\n  const [collateralBal, setCollateralBal] = useState(\"ht\");\n  const [receivedType, setReceived] = useState(\"eth\");\n  const { getBorrowInterest, handleBorrowValueChange } = useActions();\n  const { walletConnected, accounts, handleWalletConnect } = useWalletConnect();\n\n  const { assetPoolAddress, unilendLbRouter } = useTypedSelector(\n    (state) => state.configureWallet\n  );\n  const {\n    borrowInterest,\n    borrowLtv,\n    borrowLbv,\n    liquidityAvailable,\n    lbAmount1,\n    lbAmount2,\n    tokenBalance,\n  } = useTypedSelector((state) => state.borrow);\n\n  const [transModalInfo, setTransModalInfo] = useState<boolean>(false);\n  const { borrowLoading, borrowTransHx, borrowTransHxReceived, borrowErrorMessage } =\n  useTypedSelector((state) => state.borrow);\n\n  useEffect(() => {\n    if (assetPoolAddress) {\n      getBorrowInterest(assetPoolAddress, accounts[0]);\n    }\n    // setYourCollateral(lbAmount1);\n    setBorrowReceived(lbAmount2);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [assetPoolAddress, lbAmount1, lbAmount2]);\n\n  const handleModelClose = () => {\n    setShowModel(false);\n  };\n\n  const handleModelOpen = (fieldName: string) => {\n    setCurrFieldName(fieldName);\n    setShowModel(true);\n  };\n\n  const handleCurrChange = (selectedField: any) => {\n    switch (currFieldName) {\n      case \"borrowCollateral\":\n        setCollateralBal(selectedField.name);\n        break;\n      case \"borrowReceived\":\n        setReceived(selectedField.name);\n        break;\n      default:\n        break;\n    }\n    setShowModel(false);\n  };\n\n  const handleBorrow = useCallback(async () => {\n    const unilendLB = UnilendLBContract(unilendLbRouter);\n    debugger;\n    const amount1 = web3.utils.toWei(yourCollateral, \"ether\");\n    const amount2 = web3.utils.toWei(borrowReceived, \"ether\");\n    unilendLB.methods\n      .borrow(collateralAddress, assetAddress, amount1, amount2)\n      .send({\n        from: accounts[0],\n      })\n      .on(\"transactionHash\", (result: any) => {\n        // console.log(result);\n      })\n      .on(\"error\", function (error: any) {\n        console.log(error);\n      });\n  }, [accounts, borrowReceived, unilendLbRouter, yourCollateral]);\n  let curencySelectModel = (\n    <CurrencySelectModel\n      currFieldName={currFieldName}\n      handleCurrChange={(selectedField) => handleCurrChange(selectedField)}\n      show={showModel}\n      handleClose={handleModelClose}\n    />\n  );\n  const handleMainButton = () => {\n    if (\n      accounts &&\n      accounts.length &&\n      yourCollateral <= tokenBalance &&\n      walletConnected\n    ) {\n      return (\n        <button\n          disabled={yourCollateral === \"\"}\n          className=\"btn btn-lg btn-custom-primary\"\n          onClick={handleBorrow}\n          type=\"button\"\n        >\n          Borrow\n        </button>\n      );\n    } else if (walletConnected && yourCollateral > tokenBalance) {\n      return (\n        <button className=\"btn btn-lg btn-custom-primary\" disabled>\n          Insufficient Balance\n        </button>\n      );\n    } else {\n      return (\n        <button\n          className=\"btn btn-lg btn-custom-primary\"\n          onClick={handleWalletConnect}\n        >\n          Connect Wallet\n        </button>\n      );\n    }\n  };\n  return (\n    <>\n      <ContentCard title=\"Borrow\">\n        <div className=\"swap-root\">\n          <FieldCard\n            onF1Change={(e: any) => {\n              setYourCollateral(e.target.value);\n              if (walletConnected && yourCollateral <= tokenBalance) {\n                setTimeout(() => {\n                  handleBorrowValueChange(e.target.value, unilendLbRouter);\n                }, 1000);\n              }\n            }}\n            handleModelOpen={() => handleModelOpen(\"borrowCollateral\")}\n            fieldLabel=\"Your Collateral\"\n            fieldValue={lbAmount1}\n            fieldType=\"number\"\n            selectLabel={`Balance: ${tokenBalance}`}\n            selectValue={collateralBal}\n          />\n          <div className=\"pt-3\"></div>\n          <FieldCard\n            onF1Change={(e: any) => {\n              setBorrowReceived(e.target.value);\n            }}\n            fieldLabel=\"Received\"\n            fieldValue={lbAmount2}\n            fieldType=\"number\"\n            selectLabel=\"\"\n            selectValue={receivedType}\n            handleModelOpen={() => handleModelOpen(\"borrowReceived\")}\n          />\n          <div className=\"d-grid py-3\">{handleMainButton()}</div>\n          <div className=\"price_head\">\n            <div className=\"price_aa\">\n              <div className=\"price-list\">\n                Borrow APR{\" \"}\n                <span className=\"price\">\n                  {borrowInterest === \"\" ? \"-\" : borrowInterest}\n                </span>\n              </div>\n              <div className=\"price-list\">\n                LTV{\" \"}\n                <span className=\"price ltv\">\n                  {borrowLtv === \"\" ? \"-\" : borrowLtv}\n                </span>\n              </div>\n              <div className=\"price-list\">\n                LBV{\" \"}\n                <span className=\"price lbv\">\n                  {borrowLbv === \"\" ? \"-\" : borrowLbv}\n                </span>\n              </div>\n              <div className=\"price-list\">\n                Liquidity Available{\" \"}\n                <span className=\"price avail\">\n                  {liquidityAvailable === \"\" ? \"-\" : liquidityAvailable}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        {curencySelectModel}\n      </ContentCard>\n      {transModalInfo && (\n        <TransactionPopup\n          handleClose={() => {\n            setTransModalInfo(false);\n          }}\n          mode={\n            !borrowTransHxReceived && !borrowErrorMessage\n              ? \"loading\"\n              : borrowTransHxReceived\n              ? \"success\"\n              : \"failure\"\n          }\n        />\n      )}\n    </>\n  );\n};\n\nexport default Borrow;\n","/home/oem/unilend-interface/src/components/View/Redeem/Redeem.tsx",["184","185","186"],"import React, { FC, useCallback, useEffect, useState } from \"react\";\nimport ContentCard from \"../UI/ContentCard/ContentCard\";\nimport FieldCard from \"../UI/FieldsCard/FieldCard\";\nimport eth from \"assets/eth.svg\";\nimport \"./Redeem.scss\";\nimport CurrencySelectModel from \"../UI/CurrencySelectModel/CurrencySelectModel\";\nimport { useActions } from \"hooks/useActions\";\nimport { useTypedSelector } from \"hooks/useTypedSelector\";\nimport useWalletConnect from \"hooks/useWalletConnect\";\ninterface Props {}\n\nconst Redeem: FC<Props> = (props) => {\n  const [redeemAmount, setRedeemAmount] = useState(\"\");\n  const [showModel, setShowModel] = useState(false);\n  const [currFieldName, setCurrFieldName] = useState(\"\");\n  const [youRedeem, setYouRedeem] = useState(\"ht\");\n  const { accounts, handleWalletConnect } = useWalletConnect();\n  const {\n    getCollateralAmount,\n    getCollateralAmountBase,\n    handleRedeemAction,\n  } = useActions();\n  const { unilendLbRouter, assetPoolAddress } = useTypedSelector(\n    (state) => state.configureWallet\n  );\n  const { collateralShare, collateralShareBase } = useTypedSelector(\n    (state) => state.redeem\n  );\n  // const { youOwe } = useTypedSelector((state) => state.repay);\n  const handleFieldValue = useCallback(() => {\n    getCollateralAmount(assetPoolAddress, accounts[0]);\n    getCollateralAmountBase(assetPoolAddress, accounts[0]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [assetPoolAddress]);\n\n  useEffect(() => {\n    if (assetPoolAddress) {\n      handleFieldValue();\n      // getTSupply(assetPoolAddress);\n    }\n  }, [assetPoolAddress, handleFieldValue]);\n\n  function handleModelClose() {\n    setShowModel(false);\n  }\n\n  const handleModelOpen = (fieldName: string) => {\n    setCurrFieldName(fieldName);\n    setShowModel(true);\n  };\n\n  const handleCurrChange = (selectedField: any) => {\n    setYouRedeem(selectedField.name);\n    setShowModel(false);\n  };\n\n  const handleRedeem = async () => {\n    handleRedeemAction(unilendLbRouter, redeemAmount, accounts);\n  };\n\n  return (\n    <>\n      <ContentCard title=\"Redeem\">\n        <div className=\"mb-3\">\n          <div className=\"row mt-3\">\n            <div className=\"col-6\">\n              <img className=\"ticker_img  mr-2\" src={eth} alt=\"Eth\" />\n              <span className=\"ticker_name\">uWETH</span>\n            </div>\n            <div className=\"col-6\" style={{ textAlign: \"right\" }}>\n              <p className=\"collateralAmount\">{collateralShare}</p>\n            </div>\n          </div>\n          <hr className=\"ticket_linebreak\" />\n          <div className=\"row mt-3\">\n            <div className=\"col-6\">\n              <img className=\"ticker_img  mr-2\" src={eth} alt=\"Eth\" />\n              <span className=\"ticker_name\">ETH</span>\n            </div>\n            <div className=\"col-6\" style={{ textAlign: \"right\" }}>\n              <p className=\"collateralAmount\">\n                {collateralShareBase === \"0\"\n                  ? collateralShareBase\n                  : `~${collateralShareBase}`}\n              </p>\n            </div>\n            <hr className=\"ticket_linebreak\" />\n          </div>\n        </div>\n        <FieldCard\n          onF1Change={(e: any) => {\n            setRedeemAmount(e.target.value);\n          }}\n          fieldType=\"number\"\n          fieldValue=\"\"\n          handleModelOpen={() => handleModelOpen(\"youRedeem\")}\n          fieldLabel=\"You Redeem\"\n          selectLabel=\"\"\n          selectValue={youRedeem}\n        />\n        <div className=\"d-grid pt-4\">\n          {accounts.length > 0 ? (\n            <button\n              disabled={redeemAmount.length < 1}\n              className=\"btn btn-lg btn-custom-primary\"\n              onClick={handleRedeem}\n              type=\"button\"\n            >\n              Redeem\n            </button>\n          ) : (\n            <button\n              className=\"btn btn-lg btn-custom-primary\"\n              onClick={handleWalletConnect}\n            >\n              Connect Wallet\n            </button>\n          )}\n        </div>\n        <div className=\"price_head py-3\">\n          <div className=\"price_aa\">\n            <div className=\"price-list\">\n              Liquidity Available ( ETH )<span className=\"price\">-</span>\n            </div>\n          </div>\n        </div>\n        <CurrencySelectModel\n          show={showModel}\n          handleClose={handleModelClose}\n          handleCurrChange={(selectedField) => handleCurrChange(selectedField)}\n          currFieldName={currFieldName}\n        />\n      </ContentCard>\n    </>\n  );\n};\n\nexport default Redeem;\n","/home/oem/unilend-interface/src/components/View/Repay/Repay.tsx",[],"/home/oem/unilend-interface/src/components/View/Lend/Lend.tsx",["187","188","189"],"import React, { FC, useEffect, useState } from \"react\";\nimport { useActions } from \"hooks/useActions\";\nimport { useTypedSelector } from \"hooks/useTypedSelector\";\nimport ContentCard from \"../UI/ContentCard/ContentCard\";\nimport CurrencySelectModel from \"../UI/CurrencySelectModel/CurrencySelectModel\";\nimport FieldCard from \"../UI/FieldsCard/FieldCard\";\nimport useWalletConnect from \"hooks/useWalletConnect\";\nimport TransactionPopup from \"../UI/TransactionLoaderPopup/TransactionLoader\";\n\ninterface Props {}\n\nconst Lend: FC<Props> = (props) => {\n  const [showModel, setShowModel] = useState(false);\n  const [lendAmount, setLendAmount] = useState(\"\");\n  const [currFieldName, setCurrFieldName] = useState(\"\");\n  const [yourLend, setYourLend] = useState(\"ht\");\n  const { walletConnected, accounts, handleWalletConnect } = useWalletConnect();\n  const { handleLendAction, getBorrowInterest } = useActions();\n  const { unilendLbRouter, assetPoolAddress, accountBalance } =\n    useTypedSelector((state) => state.configureWallet);\n  const { lendLoading, lendTransHx, lendTransHxReceived, lendErrorMessage ,lendSuccessMessage} =\n    useTypedSelector((state) => state.lend);\n  const { lendInterest } = useTypedSelector((state) => state.borrow);\n  const [transModalInfo, setTransModalInfo] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (assetPoolAddress) {\n      getBorrowInterest(assetPoolAddress, accounts[0]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [assetPoolAddress]);\n  const handleModelClose = () => {\n    setShowModel(false);\n  };\n\n  const handleModelOpen = (fieldName: string) => {\n    setCurrFieldName(fieldName);\n    setShowModel(true);\n  };\n\n  const handleCurrChange = (selectedField: any) => {\n    setYourLend(selectedField.name);\n    setShowModel(false);\n  };\n\n  const handleLend = async () => {\n    setTransModalInfo(true);\n    handleLendAction(unilendLbRouter, accounts, lendAmount);\n  };\n\n  return (\n    <>\n      <ContentCard title=\"Lend\">\n        <FieldCard\n          onF1Change={(e: any) => {\n            setLendAmount(e.target.value);\n          }}\n          fieldType=\"text\"\n          fieldValue=\"\"\n          handleModelOpen={() => handleModelOpen(\"yourLend\")}\n          fieldLabel=\"You Lend\"\n          selectValue={yourLend}\n          selectLabel=\"\"\n        />\n        <div className=\"price_head py-4\">\n          <div className=\"price_aa\">\n            <div className=\"price-list\">\n              Balance{\" \"}\n              <span className=\"price\">\n                {accountBalance ? `${accountBalance}` : \"\"}\n              </span>\n            </div>\n            <div className=\"price-list\">\n              Deposit APY{\" \"}\n              <span className=\"price\">\n                {lendInterest === \"\" ? \"-\" : lendInterest}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"d-grid py-3\">\n          {walletConnected ? (\n            <button\n              disabled={lendAmount.length < 1}\n              className=\"btn btn-lg btn-custom-primary\"\n              onClick={handleLend}\n              type=\"button\"\n            >\n              Lend\n            </button>\n          ) : (\n            <button\n              className=\"btn btn-lg btn-custom-primary\"\n              onClick={handleWalletConnect}\n            >\n              Connect Wallet\n            </button>\n          )}\n        </div>\n        <CurrencySelectModel\n          handleCurrChange={(selectedField) => handleCurrChange(selectedField)}\n          currFieldName={currFieldName}\n          show={showModel}\n          handleClose={handleModelClose}\n        />\n      </ContentCard>\n      {transModalInfo && (\n        <TransactionPopup\n          handleClose={() => {\n            setTransModalInfo(false);\n          }}\n          mode={\n            !lendTransHxReceived && !lendErrorMessage\n              ? \"loading\"\n              : lendTransHxReceived\n              ? \"success\"\n              : \"failure\"\n          }\n        />\n      )}\n    </>\n  );\n};\n\nexport default Lend;\n","/home/oem/unilend-interface/src/state/store.tsx",[],"/home/oem/unilend-interface/src/components/View/Swap/Swap.tsx",[],"/home/oem/unilend-interface/src/components/View/UI/ContentCard/ContentCard.tsx",[],"/home/oem/unilend-interface/src/components/View/UI/Navbar/NavBar.tsx",["190"],"import React, { useEffect, useState } from \"react\";\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\n\nimport logo from \"../../../../assets/download.png\";\nimport walletlight from \"../../../../assets/wallet-light.svg\";\nimport walletdark from \"../../../../assets/wallet-dark.svg\";\nimport sun from \"../../../../assets/sun.svg\";\nimport moon from \"../../../../assets/moon.svg\";\nimport { shortenAddress } from \"../../../../utils\";\nimport { useActions } from \"../../../../hooks/useActions\";\nimport { useTypedSelector } from \"../../../../hooks/useTypedSelector\";\nimport useWalletConnect from \"hooks/useWalletConnect\";\ninterface Props extends RouteComponentProps<any> {}\n\nconst NavBar: React.FC<Props> = (props) => {\n  const [currentPage, setCurrentPage] = useState(\"\");\n  const { theme } = useTypedSelector((state) => state.settings);\n  const { lendLoading } = useTypedSelector((state) => state.lend);\n  const { themeChange } = useActions();\n  const { walletConnected, accounts, handleWalletConnect, loading } =\n    useWalletConnect();\n  // const { accounts, walletConnected, loading } = useTypedSelector(\n  //   (state) => state.configureWallet\n  // );\n  useEffect(() => {\n    setCurrentPage(props.location.pathname);\n  }, [props.location.pathname]);\n\n  const handleUpdate = () => {\n    themeChange(theme);\n  };\n\n  return (\n    <>\n      <nav className={`navbar navbar-expand-sm navbar-${theme} bg-${theme}`}>\n        <div className=\"container-fluid\">\n          <Link className=\"navbar-brand navbar-brand-custom\" to=\"#\">\n            <img\n              src={logo}\n              alt=\"Logo\"\n              width=\"30\"\n              height=\"24\"\n              className=\"d-inline-block align-top\"\n            />\n          </Link>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-lg-0\">\n              {/* <li className=\"nav-item\">\n                <Link\n                  className={\n                    currentPage === \"/swap\" ? \"nav-link active\" : \"nav-link\"\n                  }\n                  aria-current=\"page\"\n                  to=\"/swap\"\n                >\n                  Swap\n                </Link>\n              </li> */}\n              <li className=\"nav-item\">\n                <Link\n                  className={\n                    currentPage === \"/borrow\" ? \"nav-link active\" : \"nav-link\"\n                  }\n                  aria-current=\"page\"\n                  to=\"/borrow\"\n                >\n                  Borrow\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link\n                  className={\n                    currentPage === \"/lend\" ? \"nav-link active\" : \"nav-link\"\n                  }\n                  aria-current=\"page\"\n                  to=\"/lend\"\n                >\n                  Lend\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link\n                  className={\n                    currentPage === \"/redeem\" ? \"nav-link active\" : \"nav-link\"\n                  }\n                  aria-current=\"page\"\n                  to=\"/redeem\"\n                >\n                  Redeem\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link\n                  className={\n                    currentPage === \"/repay\" ? \"nav-link active\" : \"nav-link\"\n                  }\n                  aria-current=\"page\"\n                  to=\"/repay\"\n                >\n                  Repay\n                </Link>\n              </li>\n              {/* <li className=\"nav-item\">\n                <Link\n                  className={\n                    currentPage === \"/migrate\" ? \"nav-link active\" : \"nav-link\"\n                  }\n                  aria-current=\"page\"\n                  to=\"/migrate\"\n                >\n                  Migrate\n                </Link>\n              </li> */}\n              {/* <li className=\"nav-item\">\n                <Link\n                  className={\n                    currentPage === \"/mining\" ? \"nav-link active\" : \"nav-link\"\n                  }\n                  aria-current=\"page\"\n                  to=\"/mining\"\n                >\n                  Mining\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  className={\n                    currentPage === \"/info\" ? \"nav-link active\" : \"nav-link\"\n                  }\n                  aria-current=\"page\"\n                  to=\"/info\"\n                >\n                  Info\n                </Link>\n              </li> */}\n            </ul>\n          </div>\n          {(accounts && accounts.length) || walletConnected ? (\n            <button\n              className={`d-flex btn ${\n                theme === \"dark\" && \"btn-dark\"\n              } btn-custom-secondary`}\n              onClick={handleWalletConnect}\n            >\n              {shortenAddress(accounts[0])}\n            </button>\n          ) : (\n            <button\n              className={`d-flex btn ${\n                theme === \"dark\" && \"btn-dark\"\n              } btn-custom-secondary`}\n              onClick={handleWalletConnect}\n            >\n              {!loading ? (\n                <span>\n                  <img\n                    src={theme === \"light\" ? walletlight : walletdark}\n                    width=\"26\"\n                    alt=\"Wallet\"\n                    className=\"d-inline-block px-1\"\n                  />\n                  Connect wallet\n                </span>\n              ) : (\n                <div className=\"spinner-border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </div>\n              )}\n            </button>\n          )}\n          <button\n            onClick={() => handleUpdate()}\n            className={`d-flex ml-3 btn ${\n              theme === \"dark\" && \"btn-dark\"\n            } btn-custom-secondary btn-theme-icon`}\n          >\n            {\n              <img\n                width=\"20\"\n                src={theme === \"light\" ? sun : moon}\n                alt=\"theme\"\n              />\n            }\n          </button>\n        </div>\n      </nav>\n    </>\n  );\n};\nexport default withRouter(NavBar);\n","/home/oem/unilend-interface/src/components/View/UI/FieldsCard/FieldCard.tsx",[],"/home/oem/unilend-interface/src/components/View/UI/CurrencySelectModel/CurrencySelectModel.tsx",[],"/home/oem/unilend-interface/src/components/View/UI/TransactionLoaderPopup/TransactionLoader.tsx",["191"],"import { FC } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport \"./TransactionLoader.scss\";\nimport { useTypedSelector } from \"hooks/useTypedSelector\";\nimport Loader from \"react-loader-spinner\";\nimport Alert from \"assets/error.svg\";\nimport { getTransactionHashUrl } from \"components/Helpers\";\n// import ArrowUp from \"assets/arrowup.png\";\ninterface Props {\n  handleClose: () => void;\n  mode: string;\n}\n\nconst TransactionPopup: FC<Props> = ({ handleClose, mode }) => {\n  const { theme } = useTypedSelector((state) => state.settings);\n  // const { activeNetWork } = useTypedSelector((state) => state.connectWallet);\n\n  // const { donateTransactionHash } = useTypedSelector((state) => state.donate);\n  // const { redeemTransactionHash } = useTypedSelector((state) => state.redeem);\n  // const { airdropTransactionHash } = useTypedSelector((state) => state.airdrop);\n  // const getActiveHash = () => {\n  //   switch (activeTab) {\n  //     case \"lend\":\n  //       return depositTransactionHash;\n  //     case \"reward\":\n  //       return donateTransactionHash;\n  //     case \"redeem\":\n  //       return redeemTransactionHash;\n  //     case \"airdrop\":\n  //       return airdropTransactionHash;\n  //   }\n  // };\n  function transactionMethods() {\n    switch (mode) {\n      case \"success\":\n        return (\n          <>\n            <Modal\n              className={`modal-theme ${theme === \"dark\" ? \"dark\" : \"light\"}`}\n              animation={false}\n              size=\"sm\"\n              show={true}\n              onHide={handleClose}\n            >\n              <Modal.Header className=\"modal-header-custom\" closeButton>\n                <Modal.Title className=\"model-title-custom\"></Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div\n                  className=\"modal-body-info\"\n                  style={{ padding: \"1rem 2rem\" }}\n                >\n                  <div className=\"pb-5 pt-3\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"90\"\n                      height=\"90\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"#2a6def\"\n                      style={{\n                        strokeWidth: \"0.5\",\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                      }}\n                    >\n                      <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                      <polyline points=\"16 12 12 8 8 12\"></polyline>\n                      <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"8\"></line>\n                    </svg>\n                  </div>\n\n                  <div className=\"transaction-details\">\n                    <div className=\" transaction-status \">\n                      Transaction Submitted\n                    </div>\n                    {/* {lendTransHx ? (\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={getTransactionHashUrl(\n                          activeNetWork,\n                          getActiveHash()\n                        )}\n                        className=\"sc-jKJlTe cEMwVc\"\n                      >\n                        <div className=\"etherscan-link\">View on Explorer</div>\n                      </a>\n                    ) : (\n                      \"\"\n                    )} */}\n                  </div>\n                  <button\n                    className=\"btn btn-lg btn-custom-primary mt-4\"\n                    onClick={handleClose}\n                    type=\"button\"\n                  >\n                    Close\n                  </button>\n                </div>\n              </Modal.Body>\n              <Modal.Footer className=\"wallet-footer p-2\"></Modal.Footer>\n            </Modal>\n          </>\n        );\n      case \"loading\":\n        return (\n          <>\n            <Modal\n              className={`modal-theme ${theme === \"dark\" ? \"dark\" : \"light\"}`}\n              animation={false}\n              size=\"sm\"\n              show={true}\n              onHide={handleClose}\n            >\n              <Modal.Header className=\"modal-header-custom\" closeButton>\n                <Modal.Title className=\"model-title-custom\"></Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div className=\"modal-body-info\">\n                  <div\n                    style={{\n                      margin: \" 25px 0\",\n                    }}\n                  >\n                    <Loader\n                      type=\"Circles\"\n                      color={`${theme === \"dark\" ? \"#800080\" : \"#800080\"}`}\n                      height={100}\n                      width={100}\n                    />\n                  </div>\n                  <h4 className=\"mt-4\">Waiting For Confirmation</h4>\n                  {/* <h5>Swapping 1 ETH for 2.945 UNI</h5> */}\n                  <p>Confirm this transaction in your wallet</p>\n                </div>\n              </Modal.Body>\n              <Modal.Footer className=\"wallet-footer p-2\"></Modal.Footer>\n            </Modal>\n          </>\n        );\n      case \"failure\":\n        return (\n          <>\n            <Modal\n              className={`modal-theme ${theme === \"dark\" ? \"dark\" : \"light\"}`}\n              animation={false}\n              size=\"sm\"\n              show={true}\n              onHide={handleClose}\n            >\n              <Modal.Header className=\"modal-header-custom\" closeButton>\n                <Modal.Title className=\"model-title-custom\">Error</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div\n                  className=\"modal-body-info\"\n                  style={{ padding: \"1rem 2rem\" }}\n                >\n                  <img\n                    className=\"icon\"\n                    src={Alert}\n                    alt=\"alert icon\"\n                    width=\"85\"\n                  />\n                  <h5 className=\"mt-4\">Transaction Rejected</h5>\n                  <button\n                    className=\"btn btn-lg btn-custom-primary mt-4\"\n                    onClick={handleClose}\n                    type=\"button\"\n                  >\n                    Close\n                  </button>\n                </div>\n              </Modal.Body>\n              <Modal.Footer className=\"wallet-footer p-2\"></Modal.Footer>\n            </Modal>\n          </>\n        );\n      default:\n        return <></>;\n    }\n  }\n  return <>{transactionMethods()}</>;\n};\nexport default TransactionPopup;\n","/home/oem/unilend-interface/src/state/action-creators/index.tsx",[],"/home/oem/unilend-interface/src/state/reducers/index.tsx",[],"/home/oem/unilend-interface/src/hooks/useWalletConnect.tsx",[],"/home/oem/unilend-interface/src/ethereum/web3.tsx",[],"/home/oem/unilend-interface/src/ethereum/contracts/UnilendLB.tsx",[],"/home/oem/unilend-interface/src/state/action-creators/settingsAction.tsx",[],"/home/oem/unilend-interface/src/state/action-creators/repayAction.tsx",[],"/home/oem/unilend-interface/src/state/action-creators/redeemAction.tsx",[],"/home/oem/unilend-interface/src/state/action-creators/connectWalletAction.tsx",[],"/home/oem/unilend-interface/src/state/action-creators/borrowAction.tsx",[],"/home/oem/unilend-interface/src/state/reducers/borrowReducer.tsx",[],"/home/oem/unilend-interface/src/state/reducers/configureWalletReducer.tsx",[],"/home/oem/unilend-interface/src/state/reducers/repayReducer.tsx",[],"/home/oem/unilend-interface/src/state/reducers/redeemReducer.tsx",[],"/home/oem/unilend-interface/src/state/action-creators/lendAction.tsx",[],"/home/oem/unilend-interface/src/state/reducers/settingsReducer.tsx",[],"/home/oem/unilend-interface/src/state/reducers/lendReducer.tsx",[],"/home/oem/unilend-interface/src/ethereum/contracts/index.tsx",[],"/home/oem/unilend-interface/src/utils/index.tsx",[],"/home/oem/unilend-interface/src/ethereum/web3Service.tsx",[],"/home/oem/unilend-interface/src/state/action-types/index.tsx",[],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":39,"column":11,"nodeType":"198","messageId":"199","endLine":39,"endColumn":24},{"ruleId":"196","severity":1,"message":"200","line":39,"column":26,"nodeType":"198","messageId":"199","endLine":39,"endColumn":39},{"ruleId":"196","severity":1,"message":"201","line":31,"column":11,"nodeType":"198","messageId":"199","endLine":31,"endColumn":24},{"ruleId":"196","severity":1,"message":"202","line":31,"column":26,"nodeType":"198","messageId":"199","endLine":31,"endColumn":39},{"ruleId":"196","severity":1,"message":"203","line":31,"column":84,"nodeType":"198","messageId":"199","endLine":31,"endColumn":104},{"ruleId":"196","severity":1,"message":"204","line":21,"column":11,"nodeType":"198","messageId":"199","endLine":21,"endColumn":22},{"ruleId":"196","severity":1,"message":"205","line":21,"column":24,"nodeType":"198","messageId":"199","endLine":21,"endColumn":35},{"ruleId":"196","severity":1,"message":"206","line":21,"column":76,"nodeType":"198","messageId":"199","endLine":21,"endColumn":94},{"ruleId":"196","severity":1,"message":"204","line":18,"column":11,"nodeType":"198","messageId":"199","endLine":18,"endColumn":22},{"ruleId":"196","severity":1,"message":"207","line":7,"column":10,"nodeType":"198","messageId":"199","endLine":7,"endColumn":31},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"@typescript-eslint/no-unused-vars","'borrowLoading' is assigned a value but never used.","Identifier","unusedVar","'borrowTransHx' is assigned a value but never used.","'redeemLoading' is assigned a value but never used.","'redeemTransHx' is assigned a value but never used.","'redeemSuccessMessage' is assigned a value but never used.","'lendLoading' is assigned a value but never used.","'lendTransHx' is assigned a value but never used.","'lendSuccessMessage' is assigned a value but never used.","'getTransactionHashUrl' is defined but never used.","no-global-assign","no-unsafe-negation"]